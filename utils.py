import numpy as np

rand = np.random.default_rng()
maxExponent = 11

colors = {
  "BACKGROUND_COLOR": (250, 248, 239),
  "BOARD_COLOR": (187, 173, 161),
  "TILE_EMPTY_COLOR": (205, 193, 181),
  "TILE_TEXT_COLOR_LOW": (119, 110, 101),
  "TILE_TEXT_COLOR_HIGH": (250, 246, 243),
  "TILE_VALUE_COLORS": {
    2: (239, 228, 218),
    4: (238, 225, 201),
    8: (243, 178, 123),
    16: (246, 150, 101),
    32: (247, 124, 95),
    64: (248, 96, 59),
    128: (237, 208, 115),
    256: (237, 204, 99),
    512: (237, 201, 80),
    1024: (237, 197, 63),
    2048: (237, 194, 46),
    4096: (0, 0, 0),
    8192: (0, 0, 0)
  }
}

primeBoard = np.array([[2, 3, 5, 7],
                     [11, 13, 17, 19],
                     [23, 29, 31, 37],
                     [41, 43, 47, 53]])

snakePaths = np.array([[[0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3], [0,1,2,3,3,2,1,0,0,1,2,3,3,2,1,0]],
                       [[0,1,2,3,3,2,1,0,0,1,2,3,3,2,1,0], [0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3]],
                       [[0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3], [3,2,1,0,0,1,2,3,3,2,1,0,0,1,2,3]],
                       [[0,1,2,3,3,2,1,0,0,1,2,3,3,2,1,0], [3,3,3,3,2,2,2,2,1,1,1,1,0,0,0,0]],
                       [[3,3,3,3,2,2,2,2,1,1,1,1,0,0,0,0], [0,1,2,3,3,2,1,0,0,1,2,3,3,2,1,0]],
                       [[3,2,1,0,0,1,2,3,3,2,1,0,0,1,2,3], [0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3]],
                       [[3,3,3,3,2,2,2,2,1,1,1,1,0,0,0,0], [3,2,1,0,0,1,2,3,3,2,1,0,0,1,2,3]],
                       [[3,2,1,0,0,1,2,3,3,2,1,0,0,1,2,3], [3,3,3,3,2,2,2,2,1,1,1,1,0,0,0,0]]])

cornerControls =         [[[[0],[0]],
                         [[1,0],[0,1]],
                       [[2,1,0],[0,1,2]],
                     [[3,2,1,0],[0,1,2,3]],
                       [[3,2,1],[1,2,3]],
                         [[3,2],[2,3]],
                           [[3],[3]]],

                           [[[3],[3]],
                          [[3,2],[2,3]],
                        [[3,2,1],[1,2,3]],
                      [[3,2,1,0],[0,1,2,3]],
                        [[2,1,0],[0,1,2]],
                          [[1,0],[0,1]],
                            [[0],[0]]],

                          [[[0],[3]],
                         [[1,0],[3,2]],
                       [[2,1,0],[3,2,1]],
                     [[3,2,1,0],[3,2,1,0]],
                       [[3,2,1],[2,1,0]],
                         [[3,2],[1,0]],
                           [[3],[0]]],
                           
                          [[[3],[0]],
                         [[3,2],[1,0]],
                       [[3,2,1],[2,1,0]],
                     [[3,2,1,0],[3,2,1,0]],
                       [[2,1,0],[3,2,1]],
                         [[1,0],[3,2]],
                           [[0],[3]]]]

# Board forms to simulate from: 
# - Building: low value tiles combining in good form
# - Merging: merges are available in multiple directions
# - Stuck: bad move is needed to unlock the board
# - Recovering: snake path correlation is low and recovery is needed for continuation
pbEndgame = np.array([[4, 4, 8,  4],
                      [4, 64, 4,  2], 
                      [8, 256, 8,  16],
                      [4, 1024, 2048, 8192]])
testBoards = [
    np.array([[0, 0, 0,  2],
              [0, 0, 2,  8], 
              [0, 2, 8,  64],
              [2, 8, 64, 512]]),

    np.array([[0, 0, 0,  0],
              [0, 2, 4,  8], 
              [128, 64, 32,  16],
              [256, 512, 1024, 2048]]),

    np.array([[2,  16, 64,  8],
              [2,  2, 4,   32],
              [64, 8, 512, 128],
              [0,  2, 1024,   8]]),

    np.array([[0, 0, 0, 0],
               [4, 0, 0, 0],
               [16, 0, 4, 0],
               [4, 4, 4, 2]]),

    np.array([[0, 0, 5, 0],
               [0, 0, 0, 3],
               [2, 4, 1, 0],
               [0, 0, 0, 0]]), 
    
    np.array([[0,  64, 512,  64],
              [  0,   0,   4, 512],
              [  0 ,  0 ,  8 , 64],
              [  0 ,  2 , 16 , 32]]),

    np.array([[4, 0, 2, 4],
               [4, 2, 4, 0],
               [2, 4, 0, 0],
               [4, 0, 0, 0]]),
               
      np.array([[4, 0, 2, 2],
                [2, 2, 2, 0],
                [0, 4, 0, 2],
                [4, 2, 0, 2]]),
                
      np.array([[0, 2, 0,  2],
              [0, 0, 0,  8], 
              [16, 0, 16,  4],
              [16, 32, 64, 1024]]),]


